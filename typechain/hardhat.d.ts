/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "IERC1822ProxiableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822ProxiableUpgradeable__factory>;
    getContractFactory(
      name: "IBeaconUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeaconUpgradeable__factory>;
    getContractFactory(
      name: "ERC1967UpgradeUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967UpgradeUpgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "UUPSUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSUpgradeable__factory>;
    getContractFactory(
      name: "PausableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PausableUpgradeable__factory>;
    getContractFactory(
      name: "ReentrancyGuardUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuardUpgradeable__factory>;
    getContractFactory(
      name: "IERC20PermitUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20PermitUpgradeable__factory>;
    getContractFactory(
      name: "IERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Upgradeable__factory>;
    getContractFactory(
      name: "IERC721ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "IERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Upgradeable__factory>;
    getContractFactory(
      name: "ERC721HolderUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721HolderUpgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Upgradeable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822Proxiable__factory>;
    getContractFactory(
      name: "BeaconProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BeaconProxy__factory>;
    getContractFactory(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeacon__factory>;
    getContractFactory(
      name: "UpgradeableBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UpgradeableBeacon__factory>;
    getContractFactory(
      name: "ERC1967Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Proxy__factory>;
    getContractFactory(
      name: "ERC1967Upgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Upgrade__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721URIStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721URIStorage__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "AtomicBountyV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AtomicBountyV1__factory>;
    getContractFactory(
      name: "BountyCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BountyCore__factory>;
    getContractFactory(
      name: "OngoingBountyV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OngoingBountyV1__factory>;
    getContractFactory(
      name: "TieredBountyCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TieredBountyCore__factory>;
    getContractFactory(
      name: "TieredFixedBountyV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TieredFixedBountyV1__factory>;
    getContractFactory(
      name: "TieredPercentageBountyV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TieredPercentageBountyV1__factory>;
    getContractFactory(
      name: "IAtomicBounty",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAtomicBounty__factory>;
    getContractFactory(
      name: "IBounty",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBounty__factory>;
    getContractFactory(
      name: "IBountyCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBountyCore__factory>;
    getContractFactory(
      name: "IOngoingBounty",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOngoingBounty__factory>;
    getContractFactory(
      name: "ITieredBounty",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITieredBounty__factory>;
    getContractFactory(
      name: "ITieredFixedBounty",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITieredFixedBounty__factory>;
    getContractFactory(
      name: "ITieredPercentageBounty",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITieredPercentageBounty__factory>;
    getContractFactory(
      name: "BountyBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BountyBeacon__factory>;
    getContractFactory(
      name: "AtomicBountyStorageV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AtomicBountyStorageV1__factory>;
    getContractFactory(
      name: "BountyStorageCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BountyStorageCore__factory>;
    getContractFactory(
      name: "OngoingBountyStorageV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OngoingBountyStorageV1__factory>;
    getContractFactory(
      name: "TieredBountyStorageCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TieredBountyStorageCore__factory>;
    getContractFactory(
      name: "TieredFixedBountyStorageV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TieredFixedBountyStorageV1__factory>;
    getContractFactory(
      name: "TieredPercentageBountyStorageV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TieredPercentageBountyStorageV1__factory>;
    getContractFactory(
      name: "BountyFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BountyFactory__factory>;
    getContractFactory(
      name: "ClaimManagerOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClaimManagerOwnable__factory>;
    getContractFactory(
      name: "ClaimManagerV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClaimManagerV1__factory>;
    getContractFactory(
      name: "IClaimManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClaimManager__factory>;
    getContractFactory(
      name: "ClaimManagerStorageV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClaimManagerStorageV1__factory>;
    getContractFactory(
      name: "DepositManagerOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DepositManagerOwnable__factory>;
    getContractFactory(
      name: "DepositManagerV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DepositManagerV1__factory>;
    getContractFactory(
      name: "IDepositManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDepositManager__factory>;
    getContractFactory(
      name: "DepositManagerStorageV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DepositManagerStorageV1__factory>;
    getContractFactory(
      name: "IKycValidity",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKycValidity__factory>;
    getContractFactory(
      name: "MockDai",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockDai__factory>;
    getContractFactory(
      name: "MockKyc",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockKyc__factory>;
    getContractFactory(
      name: "MockLink",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockLink__factory>;
    getContractFactory(
      name: "MockNft",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockNft__factory>;
    getContractFactory(
      name: "TestToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestToken__factory>;
    getContractFactory(
      name: "TokenFeeToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenFeeToken__factory>;
    getContractFactory(
      name: "OnlyOpenQ",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OnlyOpenQ__factory>;
    getContractFactory(
      name: "OpenQV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OpenQV1__factory>;
    getContractFactory(
      name: "IOpenQ",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOpenQ__factory>;
    getContractFactory(
      name: "OpenQProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OpenQProxy__factory>;
    getContractFactory(
      name: "OpenQStorageV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OpenQStorageV1__factory>;
    getContractFactory(
      name: "Oraclize",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Oraclize__factory>;
    getContractFactory(
      name: "OpenQTokenWhitelist",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OpenQTokenWhitelist__factory>;
    getContractFactory(
      name: "TokenWhitelist",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenWhitelist__factory>;

    getContractAt(
      name: "OwnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "IERC1822ProxiableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822ProxiableUpgradeable>;
    getContractAt(
      name: "IBeaconUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeaconUpgradeable>;
    getContractAt(
      name: "ERC1967UpgradeUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967UpgradeUpgradeable>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "UUPSUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSUpgradeable>;
    getContractAt(
      name: "PausableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PausableUpgradeable>;
    getContractAt(
      name: "ReentrancyGuardUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuardUpgradeable>;
    getContractAt(
      name: "IERC20PermitUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20PermitUpgradeable>;
    getContractAt(
      name: "IERC20Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Upgradeable>;
    getContractAt(
      name: "IERC721ReceiverUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721ReceiverUpgradeable>;
    getContractAt(
      name: "IERC721Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Upgradeable>;
    getContractAt(
      name: "ERC721HolderUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721HolderUpgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "IERC165Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Upgradeable>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1822Proxiable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822Proxiable>;
    getContractAt(
      name: "BeaconProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BeaconProxy>;
    getContractAt(
      name: "IBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeacon>;
    getContractAt(
      name: "UpgradeableBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UpgradeableBeacon>;
    getContractAt(
      name: "ERC1967Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Proxy>;
    getContractAt(
      name: "ERC1967Upgrade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Upgrade>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721URIStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721URIStorage>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "AtomicBountyV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AtomicBountyV1>;
    getContractAt(
      name: "BountyCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BountyCore>;
    getContractAt(
      name: "OngoingBountyV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OngoingBountyV1>;
    getContractAt(
      name: "TieredBountyCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TieredBountyCore>;
    getContractAt(
      name: "TieredFixedBountyV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TieredFixedBountyV1>;
    getContractAt(
      name: "TieredPercentageBountyV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TieredPercentageBountyV1>;
    getContractAt(
      name: "IAtomicBounty",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAtomicBounty>;
    getContractAt(
      name: "IBounty",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBounty>;
    getContractAt(
      name: "IBountyCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBountyCore>;
    getContractAt(
      name: "IOngoingBounty",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOngoingBounty>;
    getContractAt(
      name: "ITieredBounty",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITieredBounty>;
    getContractAt(
      name: "ITieredFixedBounty",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITieredFixedBounty>;
    getContractAt(
      name: "ITieredPercentageBounty",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITieredPercentageBounty>;
    getContractAt(
      name: "BountyBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BountyBeacon>;
    getContractAt(
      name: "AtomicBountyStorageV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AtomicBountyStorageV1>;
    getContractAt(
      name: "BountyStorageCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BountyStorageCore>;
    getContractAt(
      name: "OngoingBountyStorageV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OngoingBountyStorageV1>;
    getContractAt(
      name: "TieredBountyStorageCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TieredBountyStorageCore>;
    getContractAt(
      name: "TieredFixedBountyStorageV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TieredFixedBountyStorageV1>;
    getContractAt(
      name: "TieredPercentageBountyStorageV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TieredPercentageBountyStorageV1>;
    getContractAt(
      name: "BountyFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BountyFactory>;
    getContractAt(
      name: "ClaimManagerOwnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClaimManagerOwnable>;
    getContractAt(
      name: "ClaimManagerV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClaimManagerV1>;
    getContractAt(
      name: "IClaimManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClaimManager>;
    getContractAt(
      name: "ClaimManagerStorageV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClaimManagerStorageV1>;
    getContractAt(
      name: "DepositManagerOwnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DepositManagerOwnable>;
    getContractAt(
      name: "DepositManagerV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DepositManagerV1>;
    getContractAt(
      name: "IDepositManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDepositManager>;
    getContractAt(
      name: "DepositManagerStorageV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DepositManagerStorageV1>;
    getContractAt(
      name: "IKycValidity",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKycValidity>;
    getContractAt(
      name: "MockDai",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockDai>;
    getContractAt(
      name: "MockKyc",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockKyc>;
    getContractAt(
      name: "MockLink",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockLink>;
    getContractAt(
      name: "MockNft",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockNft>;
    getContractAt(
      name: "TestToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TestToken>;
    getContractAt(
      name: "TokenFeeToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenFeeToken>;
    getContractAt(
      name: "OnlyOpenQ",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OnlyOpenQ>;
    getContractAt(
      name: "OpenQV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OpenQV1>;
    getContractAt(
      name: "IOpenQ",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOpenQ>;
    getContractAt(
      name: "OpenQProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OpenQProxy>;
    getContractAt(
      name: "OpenQStorageV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OpenQStorageV1>;
    getContractAt(
      name: "Oraclize",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Oraclize>;
    getContractAt(
      name: "OpenQTokenWhitelist",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OpenQTokenWhitelist>;
    getContractAt(
      name: "TokenWhitelist",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenWhitelist>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
